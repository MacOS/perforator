// Code generated from solomon/libs/java/solomon-grammar/SolomonLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
  	"sync"
	"unicode"
	"github.com/antlr4-go/antlr/v4"
)
// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter


type SolomonLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames []string
	// TODO: EOF string
}

var SolomonLexerLexerStaticData struct {
  once                   sync.Once
  serializedATN          []int32
  ChannelNames           []string
  ModeNames              []string
  LiteralNames           []string
  SymbolicNames          []string
  RuleNames              []string
  PredictionContextCache *antlr.PredictionContextCache
  atn                    *antlr.ATN
  decisionToDFA          []*antlr.DFA
}

func solomonlexerLexerInit() {
  staticData := &SolomonLexerLexerStaticData
  staticData.ChannelNames = []string{
    "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
  }
  staticData.ModeNames = []string{
    "DEFAULT_MODE",
  }
  staticData.LiteralNames = []string{
    "", "'let'", "'by'", "'return'", "'{'", "'}'", "'('", "','", "')'", 
    "'['", "']'", "'->'", "'+'", "'-'", "'/'", "'*'", "'!'", "'&&'", "'||'", 
    "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'!=='", "'=~'", "'!~'", 
    "'?'", "':'", "'='", "';'",
  }
  staticData.SymbolicNames = []string{
    "", "KW_LET", "KW_BY", "KW_RETURN", "OPENING_BRACE", "CLOSING_BRACE", 
    "OPENING_PAREN", "COMMA", "CLOSING_PAREN", "OPENING_BRACKET", "CLOSING_BRACKET", 
    "ARROW", "PLUS", "MINUS", "DIV", "MUL", "NOT", "AND", "OR", "LT", "GT", 
    "LE", "GE", "EQ", "NE", "NOT_EQUIV", "REGEX", "NOT_REGEX", "QUESTION", 
    "COLON", "ASSIGNMENT", "SEMICOLON", "IDENT_WITH_DOTS", "IDENT", "DURATION", 
    "NUMBER", "STRING", "WS", "COMMENTS",
  }
  staticData.RuleNames = []string{
    "KW_LET", "KW_BY", "KW_RETURN", "OPENING_BRACE", "CLOSING_BRACE", "OPENING_PAREN", 
    "COMMA", "CLOSING_PAREN", "OPENING_BRACKET", "CLOSING_BRACKET", "ARROW", 
    "PLUS", "MINUS", "DIV", "MUL", "NOT", "AND", "OR", "LT", "GT", "LE", 
    "GE", "EQ", "NE", "NOT_EQUIV", "REGEX", "NOT_REGEX", "QUESTION", "COLON", 
    "ASSIGNMENT", "SEMICOLON", "IDENT_START", "IDENT_MID", "IDENT_MID_OR_DOT", 
    "IDENT_WITH_DOTS", "IDENT", "DIGIT", "SCALE_SUFFIX", "DURATION", "NUMBER", 
    "SQ", "DQ", "SQ_CHAR", "DQ_CHAR", "STRING", "WS", "COMMENTS",
  }
  staticData.PredictionContextCache = antlr.NewPredictionContextCache()
  staticData.serializedATN = []int32{
	4, 0, 38, 301, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 
	4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 
	10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 
	7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 
	20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 
	2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 
	31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 
	7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 
	41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 
	1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 
	1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 
	1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 
	17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 
	1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 
	24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 
	1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 
	34, 1, 34, 5, 34, 185, 8, 34, 10, 34, 12, 34, 188, 9, 34, 1, 34, 1, 34, 
	5, 34, 192, 8, 34, 10, 34, 12, 34, 195, 9, 34, 1, 35, 1, 35, 5, 35, 199, 
	8, 35, 10, 35, 12, 35, 202, 9, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 4, 
	38, 209, 8, 38, 11, 38, 12, 38, 210, 1, 38, 1, 38, 1, 38, 3, 38, 216, 8, 
	38, 4, 38, 218, 8, 38, 11, 38, 12, 38, 219, 1, 39, 5, 39, 223, 8, 39, 10, 
	39, 12, 39, 226, 9, 39, 1, 39, 3, 39, 229, 8, 39, 1, 39, 4, 39, 232, 8, 
	39, 11, 39, 12, 39, 233, 1, 39, 1, 39, 3, 39, 238, 8, 39, 1, 39, 4, 39, 
	241, 8, 39, 11, 39, 12, 39, 242, 3, 39, 245, 8, 39, 1, 39, 3, 39, 248, 
	8, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 3, 42, 257, 8, 
	42, 1, 43, 1, 43, 1, 43, 3, 43, 262, 8, 43, 1, 44, 1, 44, 5, 44, 266, 8, 
	44, 10, 44, 12, 44, 269, 9, 44, 1, 44, 1, 44, 1, 44, 1, 44, 5, 44, 275, 
	8, 44, 10, 44, 12, 44, 278, 9, 44, 1, 44, 1, 44, 3, 44, 282, 8, 44, 1, 
	45, 4, 45, 285, 8, 45, 11, 45, 12, 45, 286, 1, 45, 1, 45, 1, 46, 1, 46, 
	1, 46, 1, 46, 5, 46, 295, 8, 46, 10, 46, 12, 46, 298, 9, 46, 1, 46, 1, 
	46, 0, 0, 47, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 
	19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 
	37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 
	55, 28, 57, 29, 59, 30, 61, 31, 63, 0, 65, 0, 67, 0, 69, 32, 71, 33, 73, 
	0, 75, 0, 77, 34, 79, 35, 81, 0, 83, 0, 85, 0, 87, 0, 89, 36, 91, 37, 93, 
	38, 1, 0, 15, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 
	95, 97, 122, 5, 0, 46, 46, 48, 57, 65, 90, 95, 95, 97, 122, 1, 0, 48, 57, 
	6, 0, 69, 69, 71, 71, 77, 77, 80, 80, 84, 84, 107, 107, 5, 0, 100, 100, 
	104, 104, 109, 109, 115, 115, 119, 119, 2, 0, 69, 69, 101, 101, 2, 0, 43, 
	43, 45, 45, 1, 0, 39, 39, 1, 0, 34, 34, 2, 0, 39, 39, 92, 92, 1, 0, 92, 
	92, 2, 0, 34, 34, 92, 92, 2, 0, 9, 13, 28, 32, 2, 0, 10, 10, 13, 13, 311, 
	0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 
	0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 
	0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 
	0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 
	0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 
	1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 
	47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 
	0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 
	0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 
	0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 1, 95, 1, 
	0, 0, 0, 3, 99, 1, 0, 0, 0, 5, 102, 1, 0, 0, 0, 7, 109, 1, 0, 0, 0, 9, 
	111, 1, 0, 0, 0, 11, 113, 1, 0, 0, 0, 13, 115, 1, 0, 0, 0, 15, 117, 1, 
	0, 0, 0, 17, 119, 1, 0, 0, 0, 19, 121, 1, 0, 0, 0, 21, 123, 1, 0, 0, 0, 
	23, 126, 1, 0, 0, 0, 25, 128, 1, 0, 0, 0, 27, 130, 1, 0, 0, 0, 29, 132, 
	1, 0, 0, 0, 31, 134, 1, 0, 0, 0, 33, 136, 1, 0, 0, 0, 35, 139, 1, 0, 0, 
	0, 37, 142, 1, 0, 0, 0, 39, 144, 1, 0, 0, 0, 41, 146, 1, 0, 0, 0, 43, 149, 
	1, 0, 0, 0, 45, 152, 1, 0, 0, 0, 47, 155, 1, 0, 0, 0, 49, 158, 1, 0, 0, 
	0, 51, 162, 1, 0, 0, 0, 53, 165, 1, 0, 0, 0, 55, 168, 1, 0, 0, 0, 57, 170, 
	1, 0, 0, 0, 59, 172, 1, 0, 0, 0, 61, 174, 1, 0, 0, 0, 63, 176, 1, 0, 0, 
	0, 65, 178, 1, 0, 0, 0, 67, 180, 1, 0, 0, 0, 69, 182, 1, 0, 0, 0, 71, 196, 
	1, 0, 0, 0, 73, 203, 1, 0, 0, 0, 75, 205, 1, 0, 0, 0, 77, 217, 1, 0, 0, 
	0, 79, 224, 1, 0, 0, 0, 81, 249, 1, 0, 0, 0, 83, 251, 1, 0, 0, 0, 85, 256, 
	1, 0, 0, 0, 87, 261, 1, 0, 0, 0, 89, 281, 1, 0, 0, 0, 91, 284, 1, 0, 0, 
	0, 93, 290, 1, 0, 0, 0, 95, 96, 5, 108, 0, 0, 96, 97, 5, 101, 0, 0, 97, 
	98, 5, 116, 0, 0, 98, 2, 1, 0, 0, 0, 99, 100, 5, 98, 0, 0, 100, 101, 5, 
	121, 0, 0, 101, 4, 1, 0, 0, 0, 102, 103, 5, 114, 0, 0, 103, 104, 5, 101, 
	0, 0, 104, 105, 5, 116, 0, 0, 105, 106, 5, 117, 0, 0, 106, 107, 5, 114, 
	0, 0, 107, 108, 5, 110, 0, 0, 108, 6, 1, 0, 0, 0, 109, 110, 5, 123, 0, 
	0, 110, 8, 1, 0, 0, 0, 111, 112, 5, 125, 0, 0, 112, 10, 1, 0, 0, 0, 113, 
	114, 5, 40, 0, 0, 114, 12, 1, 0, 0, 0, 115, 116, 5, 44, 0, 0, 116, 14, 
	1, 0, 0, 0, 117, 118, 5, 41, 0, 0, 118, 16, 1, 0, 0, 0, 119, 120, 5, 91, 
	0, 0, 120, 18, 1, 0, 0, 0, 121, 122, 5, 93, 0, 0, 122, 20, 1, 0, 0, 0, 
	123, 124, 5, 45, 0, 0, 124, 125, 5, 62, 0, 0, 125, 22, 1, 0, 0, 0, 126, 
	127, 5, 43, 0, 0, 127, 24, 1, 0, 0, 0, 128, 129, 5, 45, 0, 0, 129, 26, 
	1, 0, 0, 0, 130, 131, 5, 47, 0, 0, 131, 28, 1, 0, 0, 0, 132, 133, 5, 42, 
	0, 0, 133, 30, 1, 0, 0, 0, 134, 135, 5, 33, 0, 0, 135, 32, 1, 0, 0, 0, 
	136, 137, 5, 38, 0, 0, 137, 138, 5, 38, 0, 0, 138, 34, 1, 0, 0, 0, 139, 
	140, 5, 124, 0, 0, 140, 141, 5, 124, 0, 0, 141, 36, 1, 0, 0, 0, 142, 143, 
	5, 60, 0, 0, 143, 38, 1, 0, 0, 0, 144, 145, 5, 62, 0, 0, 145, 40, 1, 0, 
	0, 0, 146, 147, 5, 60, 0, 0, 147, 148, 5, 61, 0, 0, 148, 42, 1, 0, 0, 0, 
	149, 150, 5, 62, 0, 0, 150, 151, 5, 61, 0, 0, 151, 44, 1, 0, 0, 0, 152, 
	153, 5, 61, 0, 0, 153, 154, 5, 61, 0, 0, 154, 46, 1, 0, 0, 0, 155, 156, 
	5, 33, 0, 0, 156, 157, 5, 61, 0, 0, 157, 48, 1, 0, 0, 0, 158, 159, 5, 33, 
	0, 0, 159, 160, 5, 61, 0, 0, 160, 161, 5, 61, 0, 0, 161, 50, 1, 0, 0, 0, 
	162, 163, 5, 61, 0, 0, 163, 164, 5, 126, 0, 0, 164, 52, 1, 0, 0, 0, 165, 
	166, 5, 33, 0, 0, 166, 167, 5, 126, 0, 0, 167, 54, 1, 0, 0, 0, 168, 169, 
	5, 63, 0, 0, 169, 56, 1, 0, 0, 0, 170, 171, 5, 58, 0, 0, 171, 58, 1, 0, 
	0, 0, 172, 173, 5, 61, 0, 0, 173, 60, 1, 0, 0, 0, 174, 175, 5, 59, 0, 0, 
	175, 62, 1, 0, 0, 0, 176, 177, 7, 0, 0, 0, 177, 64, 1, 0, 0, 0, 178, 179, 
	7, 1, 0, 0, 179, 66, 1, 0, 0, 0, 180, 181, 7, 2, 0, 0, 181, 68, 1, 0, 0, 
	0, 182, 186, 3, 63, 31, 0, 183, 185, 3, 65, 32, 0, 184, 183, 1, 0, 0, 0, 
	185, 188, 1, 0, 0, 0, 186, 184, 1, 0, 0, 0, 186, 187, 1, 0, 0, 0, 187, 
	189, 1, 0, 0, 0, 188, 186, 1, 0, 0, 0, 189, 193, 5, 46, 0, 0, 190, 192, 
	3, 67, 33, 0, 191, 190, 1, 0, 0, 0, 192, 195, 1, 0, 0, 0, 193, 191, 1, 
	0, 0, 0, 193, 194, 1, 0, 0, 0, 194, 70, 1, 0, 0, 0, 195, 193, 1, 0, 0, 
	0, 196, 200, 3, 63, 31, 0, 197, 199, 3, 65, 32, 0, 198, 197, 1, 0, 0, 0, 
	199, 202, 1, 0, 0, 0, 200, 198, 1, 0, 0, 0, 200, 201, 1, 0, 0, 0, 201, 
	72, 1, 0, 0, 0, 202, 200, 1, 0, 0, 0, 203, 204, 7, 3, 0, 0, 204, 74, 1, 
	0, 0, 0, 205, 206, 7, 4, 0, 0, 206, 76, 1, 0, 0, 0, 207, 209, 3, 73, 36, 
	0, 208, 207, 1, 0, 0, 0, 209, 210, 1, 0, 0, 0, 210, 208, 1, 0, 0, 0, 210, 
	211, 1, 0, 0, 0, 211, 215, 1, 0, 0, 0, 212, 213, 5, 109, 0, 0, 213, 216, 
	5, 115, 0, 0, 214, 216, 7, 5, 0, 0, 215, 212, 1, 0, 0, 0, 215, 214, 1, 
	0, 0, 0, 216, 218, 1, 0, 0, 0, 217, 208, 1, 0, 0, 0, 218, 219, 1, 0, 0, 
	0, 219, 217, 1, 0, 0, 0, 219, 220, 1, 0, 0, 0, 220, 78, 1, 0, 0, 0, 221, 
	223, 3, 73, 36, 0, 222, 221, 1, 0, 0, 0, 223, 226, 1, 0, 0, 0, 224, 222, 
	1, 0, 0, 0, 224, 225, 1, 0, 0, 0, 225, 228, 1, 0, 0, 0, 226, 224, 1, 0, 
	0, 0, 227, 229, 5, 46, 0, 0, 228, 227, 1, 0, 0, 0, 228, 229, 1, 0, 0, 0, 
	229, 231, 1, 0, 0, 0, 230, 232, 3, 73, 36, 0, 231, 230, 1, 0, 0, 0, 232, 
	233, 1, 0, 0, 0, 233, 231, 1, 0, 0, 0, 233, 234, 1, 0, 0, 0, 234, 244, 
	1, 0, 0, 0, 235, 237, 7, 6, 0, 0, 236, 238, 7, 7, 0, 0, 237, 236, 1, 0, 
	0, 0, 237, 238, 1, 0, 0, 0, 238, 240, 1, 0, 0, 0, 239, 241, 3, 73, 36, 
	0, 240, 239, 1, 0, 0, 0, 241, 242, 1, 0, 0, 0, 242, 240, 1, 0, 0, 0, 242, 
	243, 1, 0, 0, 0, 243, 245, 1, 0, 0, 0, 244, 235, 1, 0, 0, 0, 244, 245, 
	1, 0, 0, 0, 245, 247, 1, 0, 0, 0, 246, 248, 3, 75, 37, 0, 247, 246, 1, 
	0, 0, 0, 247, 248, 1, 0, 0, 0, 248, 80, 1, 0, 0, 0, 249, 250, 7, 8, 0, 
	0, 250, 82, 1, 0, 0, 0, 251, 252, 7, 9, 0, 0, 252, 84, 1, 0, 0, 0, 253, 
	257, 8, 10, 0, 0, 254, 255, 7, 11, 0, 0, 255, 257, 9, 0, 0, 0, 256, 253, 
	1, 0, 0, 0, 256, 254, 1, 0, 0, 0, 257, 86, 1, 0, 0, 0, 258, 262, 8, 12, 
	0, 0, 259, 260, 7, 11, 0, 0, 260, 262, 9, 0, 0, 0, 261, 258, 1, 0, 0, 0, 
	261, 259, 1, 0, 0, 0, 262, 88, 1, 0, 0, 0, 263, 267, 3, 81, 40, 0, 264, 
	266, 3, 85, 42, 0, 265, 264, 1, 0, 0, 0, 266, 269, 1, 0, 0, 0, 267, 265, 
	1, 0, 0, 0, 267, 268, 1, 0, 0, 0, 268, 270, 1, 0, 0, 0, 269, 267, 1, 0, 
	0, 0, 270, 271, 3, 81, 40, 0, 271, 282, 1, 0, 0, 0, 272, 276, 3, 83, 41, 
	0, 273, 275, 3, 87, 43, 0, 274, 273, 1, 0, 0, 0, 275, 278, 1, 0, 0, 0, 
	276, 274, 1, 0, 0, 0, 276, 277, 1, 0, 0, 0, 277, 279, 1, 0, 0, 0, 278, 
	276, 1, 0, 0, 0, 279, 280, 3, 83, 41, 0, 280, 282, 1, 0, 0, 0, 281, 263, 
	1, 0, 0, 0, 281, 272, 1, 0, 0, 0, 282, 90, 1, 0, 0, 0, 283, 285, 7, 13, 
	0, 0, 284, 283, 1, 0, 0, 0, 285, 286, 1, 0, 0, 0, 286, 284, 1, 0, 0, 0, 
	286, 287, 1, 0, 0, 0, 287, 288, 1, 0, 0, 0, 288, 289, 6, 45, 0, 0, 289, 
	92, 1, 0, 0, 0, 290, 291, 5, 47, 0, 0, 291, 292, 5, 47, 0, 0, 292, 296, 
	1, 0, 0, 0, 293, 295, 8, 14, 0, 0, 294, 293, 1, 0, 0, 0, 295, 298, 1, 0, 
	0, 0, 296, 294, 1, 0, 0, 0, 296, 297, 1, 0, 0, 0, 297, 299, 1, 0, 0, 0, 
	298, 296, 1, 0, 0, 0, 299, 300, 6, 46, 0, 0, 300, 94, 1, 0, 0, 0, 21, 0, 
	186, 193, 200, 210, 215, 219, 224, 228, 233, 237, 242, 244, 247, 256, 261, 
	267, 276, 281, 286, 296, 1, 6, 0, 0,
}
  deserializer := antlr.NewATNDeserializer(nil)
  staticData.atn = deserializer.Deserialize(staticData.serializedATN)
  atn := staticData.atn
  staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
  decisionToDFA := staticData.decisionToDFA
  for index, state := range atn.DecisionToState {
    decisionToDFA[index] = antlr.NewDFA(state, index)
  }
}

// SolomonLexerInit initializes any static state used to implement SolomonLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSolomonLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SolomonLexerInit() {
  staticData := &SolomonLexerLexerStaticData
  staticData.once.Do(solomonlexerLexerInit)
}

// NewSolomonLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSolomonLexer(input antlr.CharStream) *SolomonLexer {
  SolomonLexerInit()
	l := new(SolomonLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
  staticData := &SolomonLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SolomonLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SolomonLexer tokens.
const (
	SolomonLexerKW_LET = 1
	SolomonLexerKW_BY = 2
	SolomonLexerKW_RETURN = 3
	SolomonLexerOPENING_BRACE = 4
	SolomonLexerCLOSING_BRACE = 5
	SolomonLexerOPENING_PAREN = 6
	SolomonLexerCOMMA = 7
	SolomonLexerCLOSING_PAREN = 8
	SolomonLexerOPENING_BRACKET = 9
	SolomonLexerCLOSING_BRACKET = 10
	SolomonLexerARROW = 11
	SolomonLexerPLUS = 12
	SolomonLexerMINUS = 13
	SolomonLexerDIV = 14
	SolomonLexerMUL = 15
	SolomonLexerNOT = 16
	SolomonLexerAND = 17
	SolomonLexerOR = 18
	SolomonLexerLT = 19
	SolomonLexerGT = 20
	SolomonLexerLE = 21
	SolomonLexerGE = 22
	SolomonLexerEQ = 23
	SolomonLexerNE = 24
	SolomonLexerNOT_EQUIV = 25
	SolomonLexerREGEX = 26
	SolomonLexerNOT_REGEX = 27
	SolomonLexerQUESTION = 28
	SolomonLexerCOLON = 29
	SolomonLexerASSIGNMENT = 30
	SolomonLexerSEMICOLON = 31
	SolomonLexerIDENT_WITH_DOTS = 32
	SolomonLexerIDENT = 33
	SolomonLexerDURATION = 34
	SolomonLexerNUMBER = 35
	SolomonLexerSTRING = 36
	SolomonLexerWS = 37
	SolomonLexerCOMMENTS = 38
)

